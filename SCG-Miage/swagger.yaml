swagger: '2.0'
info:
  description: JavaInUse API reference for developers
  version: '1.0'
  title: SGC-Miage V1.0
  termsOfService: index.html
  contact:
    name: aurelien.avanzino@dedalus.eu
  license:
    name: GNU GENERAL PUBLIC LICENSE - Version 3, 29 June 2007
host: localhost:8080
basePath: /
tags:
  - name: api-controller
    description: Api Controller
  - name: compte-controller
    description: Compte Controller
  - name: connaissance-controller
    description: Connaissance Controller
  - name: emploi-controller
    description: Emploi Controller
  - name: employe-controller
    description: Employe Controller
  - name: mail-controller
    description: Mail Controller
paths:
  /api/infos/javaVersion:
    get:
      tags:
        - api-controller
      summary: Retourne le systÃ¨me actuel java utilise pour le serveur
      operationId: getJavaVersionUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/infos/version:
    get:
      tags:
        - api-controller
      summary: Retourne la version actuelle de l'api
      operationId: getVersionUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/mail/contact:
    put:
      tags:
        - mail-controller
      summary: >-
        Post the contact mail write by the user into the sending list of the
        mail service
      operationId: sendContactMailUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: mailContact
          description: mailContact
          required: true
          schema:
            $ref: '#/definitions/MailBodyRequest'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/compte/all:
    get:
      tags:
        - compte-controller
      summary: Retourne l'ensemble des comptes presents en base de donnees
      operationId: getAllAccountUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Compte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/compte/create:
    put:
      tags:
        - compte-controller
      summary: Creer un nouveau dans la base de donnees
      operationId: createAccountUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: compte
          description: compte
          required: false
          schema:
            $ref: '#/definitions/Compte'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/compte/delete/{id}:
    delete:
      tags:
        - compte-controller
      summary: Supprimer un compte de la base
      operationId: deleteCompteByIdUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/sgc/compte/query:
    get:
      tags:
        - compte-controller
      summary: Retourne une liste de compte en fonction de parametre
      operationId: getCompteByQueryUsingGET
      produces:
        - '*/*'
      parameters:
        - in: body
          name: query
          description: query
          required: true
          schema:
            $ref: '#/definitions/CompteRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Compte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/compte/update:
    post:
      tags:
        - compte-controller
      summary: Mets a jour les informations d'un compte
      operationId: updateAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: compte
          description: compte
          required: true
          schema:
            $ref: '#/definitions/Compte'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/compte/{id}:
    get:
      tags:
        - compte-controller
      summary: Retourne le compte avec associe a l'id
      operationId: getAccountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Compte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/emploi/all:
    get:
      tags:
        - emploi-controller
      summary: getAllEmploi
      operationId: getAllEmploiUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Emploi'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/emploi/create:
    put:
      tags:
        - emploi-controller
      summary: createEmploi
      operationId: createEmploiUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: emploi
          description: emploi
          required: true
          schema:
            $ref: '#/definitions/Emploi'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/emploi/delete/{id}:
    delete:
      tags:
        - emploi-controller
      summary: deleteEmploi
      operationId: deleteEmploiUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/sgc/emploi/query:
    get:
      tags:
        - emploi-controller
      summary: getEmploiByQuery
      operationId: getEmploiByQueryUsingGET
      produces:
        - '*/*'
      parameters:
        - in: body
          name: query
          description: query
          required: true
          schema:
            $ref: '#/definitions/EmploiRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Emploi'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/emploi/update:
    post:
      tags:
        - emploi-controller
      summary: Mets a jour les informations d'un emploi
      operationId: updateEmploiUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: emploi
          description: emploi
          required: true
          schema:
            $ref: '#/definitions/Emploi'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/emploi/{id}:
    get:
      tags:
        - emploi-controller
      summary: getEmploi
      operationId: getEmploiUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Emploi'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/employe/all:
    get:
      tags:
        - employe-controller
      summary: Retourne l'ensemble des employes present dans la base de donnees
      operationId: getAllEmployeUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Employe'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/employe/create:
    put:
      tags:
        - employe-controller
      summary: Creer un nouvel employe dans la base de donnees
      operationId: createEmployeUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: employe
          description: employe
          required: true
          schema:
            $ref: '#/definitions/Employe'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/employe/delete/{id}:
    delete:
      tags:
        - employe-controller
      summary: deleteEmploye
      operationId: deleteEmployeUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/sgc/employe/query:
    get:
      tags:
        - employe-controller
      summary: getEmploiByQuery
      operationId: getEmploiByQueryUsingGET_1
      produces:
        - '*/*'
      parameters:
        - in: body
          name: query
          description: query
          required: true
          schema:
            $ref: '#/definitions/EmployeRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Employe'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/employe/update:
    post:
      tags:
        - employe-controller
      summary: Mets a jour les informations d'un emploi
      operationId: updateEmployeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: employe
          description: employe
          required: true
          schema:
            $ref: '#/definitions/Employe'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/employe/{id}:
    get:
      tags:
        - employe-controller
      summary: Retourne l'employe associe a l'id donne
      operationId: getEmployeUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Employe'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/knowledge/all:
    get:
      tags:
        - connaissance-controller
      summary: Retourne l'ensemble des connaissances disponible
      operationId: getAllConnaissanceUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Connaissance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/knowledge/create:
    put:
      tags:
        - connaissance-controller
      summary: Creer une nouvelle connaissance dans la base de donnees
      operationId: createConnaissanceUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: connaissance
          description: connaissance
          required: true
          schema:
            $ref: '#/definitions/Connaissance'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/knowledge/delete/{id}:
    delete:
      tags:
        - connaissance-controller
      summary: Supprime connaissance presente en base de donnees
      operationId: deleteConnaissanceByIdUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/sgc/knowledge/query:
    get:
      tags:
        - connaissance-controller
      summary: >-
        Retourne un ensemble de connaissance en fonction de parametre de
        recherche
      operationId: getConnaissanceByQueryUsingGET
      produces:
        - '*/*'
      parameters:
        - in: body
          name: query
          description: query
          required: true
          schema:
            $ref: '#/definitions/ConnaissanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Connaissance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/knowledge/update:
    post:
      tags:
        - connaissance-controller
      summary: Mets a jour les informations d'une connaissance
      operationId: updateConnaissanceUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: connaissance
          description: connaissance
          required: true
          schema:
            $ref: '#/definitions/Connaissance'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sgc/knowledge/{id}:
    get:
      tags:
        - connaissance-controller
      summary: Retourne la connaissance associee a l'id
      operationId: getConnaissanceUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Connaissance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Compte:
    type: object
    properties:
      employeId:
        type: string
      id:
        type: string
      mail:
        type: string
      password:
        type: string
      typeCompte:
        type: string
        enum:
          - MEMBRE
          - ADMINISTRATEUR
          - MANAGER
    title: Compte
  CompteRequest:
    type: object
    title: CompteRequest
  Connaissance:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: string
      libelle:
        type: string
    title: Connaissance
  ConnaissanceRequest:
    type: object
    title: ConnaissanceRequest
  Emploi:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: string
      libelle:
        type: string
    title: Emploi
  EmploiRequest:
    type: object
    title: EmploiRequest
  Employe:
    type: object
    properties:
      code:
        type: string
      id:
        type: string
      mail:
        type: string
      nom:
        type: string
      prenom:
        type: string
      telephone:
        type: string
    title: Employe
  EmployeRequest:
    type: object
    title: EmployeRequest
  MailBodyRequest:
    type: object
    properties:
      content:
        type: string
      contentType:
        type: string
      receiversMail:
        type: array
        items:
          type: string
      senderMail:
        type: string
      senderName:
        type: string
      subject:
        type: string
    title: MailBodyRequest
