drop table public.EMPLOYE;

--Version 1.0
CREATE TABLE public.PARAMETRES(
	ID uuid NOT NULL,
	CODE varchar(20) NOT NULL,
	LIBELLE varchar(100) NOT NULL,
	VALEUR varchar(50) NOT NULL,
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_PARAMETRES PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_PARAMETRES UNIQUE (CODE)
);

CREATE TABLE public.EMPLOYE (
	ID uuid NOT NULL,
	CODE VARCHAR(4) NOT NULL,
	PRENOM VARCHAR(50) NULL,
	NOM VARCHAR(50) NOT NULL,
	PRENOMASCII VARCHAR(50) NULL,
	NOMASCII VARCHAR(50) NULL,
	PHOTO bytea NULL,
	TELEPHONE VARCHAR(10) NULL,
	MAIL VARCHAR(100) NOT NULL,
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_EMPLOYE PRIMARY KEY (ID),
	CONSTRAINT UK_MAIL_EMPLOYE UNIQUE (MAIL),
	CONSTRAINT UK_CODE_EMPLOYE UNIQUE (CODE)
);

CREATE TABLE public.COMPETENCE(
	ID uuid NOT NULL,
	CODE VARCHAR(10) NOT NULL,
	LIBELLE VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500) NULL,
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_COMPETENCE PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_COMPETENCE UNIQUE (CODE)
);

create table public.EMPLOI(
	ID uuid NOT NULL,
	CODE VARCHAR(10) NOT NULL,
	LIBELLE VARCHAR(100) NOT NULL,
	DESCRIPTION varchar(500) NULL,
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_EMPLOI PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_EMPLOI UNIQUE (CODE)
);

create table public.COMPTE(
	ID uuid NOT NULL,
	EMPLOYEID uuid NOT NULL,
	CODE VARCHAR(4) NOT NULL,
	MAIL VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL,
	TYPECOMPTE VARCHAR(30) DEFAULT 'MEMBRE',
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_COMPTE PRIMARY KEY (ID),
	CONSTRAINT FK_EMPLOYE_COMPTE FOREIGN KEY (EMPLOYEID) REFERENCES EMPLOYE(ID),
	CONSTRAINT C1_TYPECOMPTE CHECK (TYPECOMPTE IN ('MEMBRE', 'ADMINISTRATEUR', 'MANAGER'))
);

create table public.SERVICE(
	ID uuid not null,
	CODE varchar(10) not null,
	LIBELLE varchar(50) not null,
	DATEINSERTION timestamp default current_timestamp,
	DATEMAJ timestamp null,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	constraint PK_PERSONNEL primary key (ID),
	constraint UK_CODE_SERVICE unique (CODE)
);

CREATE TABLE public.CONNAISSANCE(
	ID uuid NOT NULL,
	CODE varchar(10) NOT NULL,
	LIBELLE varchar(100) NOT NULL,
	DESCRIPTION varchar(500) NOT NULL,
	DATEINSERTION timestamp DEFAULT current_timestamp,
	DATEMAJ timestamp NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_CONNAISSANCE PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_CONNAISSANCE UNIQUE (CODE)
);

CREATE TABLE public.GROUPS(
	ID uuid NOT NULL,
	CODE VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(500) NULL,
	DATEINSERTION timestamp DEFAULT current_timestamp,
	DATEMAJ timestamp NULL,
	DATEDEBUTVALDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALDITE TIMESTAMP NULL DEFAULT '3000-12-31',
	CONSTRAINT PK_GROUPS PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_GROUPS UNIQUE (CODE)
);

CREATE TABLE public.AUTEUR(
	ID uuid NOT NULL,
	COMPTEID uuid NULL,
	PRENOM VARCHAR(50) NULL,
	NOM VARCHAR(50) NULL,
	PRENOMASCII VARCHAR(50) NULL,
	NOMASCII VARCHAR(50) NULL,
	MAIL VARCHAR(100) NOT NULL,
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALIDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALIDITE TIMESTAMP DEFAULT '3000-12-31',
	CONSTRAINT PK_AUTEUR PRIMARY KEY (ID),
	CONSTRAINT UK_MAIL_AUTEUR UNIQUE (MAIL),
	CONSTRAINT FK_COMPTE_AUTEUR FOREIGN KEY (COMPTEID) REFERENCES COMPTE(ID)
);

CREATE TABLE public.FORMATION(
	ID uuid NOT NULL,
	CODE VARCHAR(20) NOT NULL,
	LIBELLE VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500) NULL,
	TAGS VARCHAR(1000) NULL,
	NIVEAU VARCHAR(30) NOT NULL DEFAULT 'INITIE',
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALIDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALIDITE TIMESTAMP DEFAULT '3000-12-31',
	CONSTRAINT PK_FORMATION PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_FORMATION UNIQUE (CODE),
	CONSTRAINT C5_NIVEAU_FORMATION CHECK (NIVEAU IN ('NONE', 'INITIE', 'DEBUTANT', 'INTERMEDIAIRE', 'CONFIRME', 'EXPERT'))
);

CREATE TABLE public.TAG(
	ID uuid NOT NULL,
	CODE VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100) NULL,
	COLOR VARCHAR(50) DEFAULT '#FFFFF',
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALIDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALIDITE TIMESTAMP DEFAULT '3000-12-31',
	CONSTRAINT PK_TAG PRIMARY KEY (ID),
	CONSTRAINT UK_CODE_TAG UNIQUE (CODE)
);

CREATE TABLE public.CONTENUE(
	ID uuid NOT NULL,
	DATEINSERTION TIMESTAMP DEFAULT current_timestamp,
	DATEMAJ TIMESTAMP NULL,
	DATEDEBUTVALIDITE TIMESTAMP DEFAULT current_timestamp,
	DATEFINVALIDITE TIMESTAMP DEFAULT '3000-12-31',
	CONSTRAINT PK_CONTENUE PRIMARY KEY (ID)
);

--TABLE RELATIONNELLE
CREATE TABLE public.FORMATIONTAG(
	ID uuid NOT NULL,
	TAGID uuid NOT NULL,
	FORMATIONID uuid NOT NULL,
	DATEDEBUT timestamp default current_timestamp,
	DATEFIN timestamp null,
	CONSTRAINT PK_FORMATIONTAG PRIMARY KEY (ID),
	CONSTRAINT FK_TAG_FORMATIONTAG FOREIGN KEY (TAGID) references TAG(ID),
	CONSTRAINT FK_FORMATION_FORMATIONTAG FOREIGN KEY (FORMATIONID) references FORMATION(ID)
);

CREATE TABLE public.GROUPEMPLOYE(
	ID uuid NOT NULL,
	EMPLOYEID uuid NOT NULL,
	GROUPID uuid NOT NULL,
	DATEDEBUT timestamp DEFAULT current_timestamp,
	DATEFIN timestamp NULL,
	CONSTRAINT PK_GROUPEMPLOYE PRIMARY KEY (ID),
	CONSTRAINT FK_EMPLOYE_GROUPEMPLOYE foreign key (EMPLOYEID) references EMPLOYE(ID),
	CONSTRAINT FK_GROUP_GROUPEMPLOYE foreign key (GROUPID) references GROUPS(ID)
);

/*CREATE TABLE public.GROUPFORMATION(
	ID uuid NOT NULL,
	FORMATIONID uuid NOT NULL,
	GROUPID uuid NOT NULL,
	DATEDEBUT timestamp DEFAULT current_timestamp,
	DATEFIN timestamp NULL,
	CONSTRAINT PK_GROUPFORMATION PRIMARY KEY (ID),
	CONSTRAINT FK_FORMATION_GROUPFORMATION foreign key (FORMATIONID) references FORMATION(ID),
	CONSTRAINT FK_GROUP_GROUPFORMATION foreign key (GROUPID) references GROUPS(ID)
);*/

create table public.EMPLOISERVICE(
	ID uuid NOT NULL,
	EMPLOIID uuid not null,
	SERVICEID uuid not null,
	DATEDEBUT timestamp default current_timestamp,
	DATEFIN timestamp null,
	CONSTRAINT PK_EMPLOISERVICE PRIMARY KEY (ID),
	constraint FK_EMPLOI_EMPLOISERVICE foreign key (EMPLOIID) references EMPLOI(ID),
	constraint FK_SERVICE_EMPLOISERVICE foreign key (SERVICEID) references SERVICE(ID)
);

create table public.EMPLOYEEMPLOI(
	ID uuid NOT NULL,
	EMPLOYEID uuid not null,
	EMPLOIID uuid not null,
	DATEDEBUT timestamp default current_timestamp,
	DATEFIN timestamp null,
	CONSTRAINT PK_EMPLOYEEMPLOI PRIMARY KEY (ID),
	constraint FK_EMPLOYE_EMPLOYEEMPLOI foreign key (EMPLOYEID) references EMPLOYE(ID),
	constraint FK_EMPLOI_EMPLOYEEMPLOI foreign key (EMPLOIID) references EMPLOI(ID)
);

create table public.EMPLOYECOMPETENCE(
	ID uuid NOT NULL,
	COMPETENCEID uuid NOT NULL,
	EMPLOYEID uuid NOT NULL,
	NIVEAU VARCHAR(30) DEFAULT 'NONE',
	DATEACQUISITION TIMESTAMP NULL,
	CONSTRAINT PK_EMPLOYECOMPETENCE PRIMARY KEY (ID),
	CONSTRAINT FK_COMPETENCE_EMPLOYECOMPETENCE FOREIGN KEY (COMPETENCEID) REFERENCES COMPETENCE(ID),
	CONSTRAINT FK_EMPLOYE_EMPLOYECOMPETENCE FOREIGN KEY (EMPLOYEID) REFERENCES EMPLOYE(ID),
	CONSTRAINT C3_NIVEAU CHECK (NIVEAU IN ('NONE', 'INITIE', 'DEBUTANT', 'INTERMEDIAIRE', 'CONFIRME', 'EXPERT'))
);

create table public.EMPLOICOMPETENCE(
	ID uuid NOT NULL,
	COMPETENCEID uuid NOT NULL,
	EMPLOIID uuid NOT NULL,
	DATEDEBUT TIMESTAMP DEFAULT current_timestamp,
	DATEFIN TIMESTAMP NULL,
	CONSTRAINT PK_EMPLOICOMPETENCE PRIMARY KEY (ID),
	CONSTRAINT FK_EMPLOI_EMPLOICOMPETENCE FOREIGN KEY (EMPLOIID) REFERENCES EMPLOI(ID),
	CONSTRAINT FK_COMPETENCE_EMPLOICOMPETENCE FOREIGN KEY (COMPETENCEID) REFERENCES COMPETENCE(ID)
);

create table public.EMPLOYECONNAISSANCE(
	ID uuid NOT NULL,
	CONNAISSANCEID uuid NOT NULL,
	EMPLOYEID uuid NOT NULL,
	NIVEAU VARCHAR(30) DEFAULT 'NONE',
	DATEACQUISITION TIMESTAMP NULL,
	CONSTRAINT PK_EMPLOYECONNAISSANCE PRIMARY KEY (ID),
	CONSTRAINT FK_CONNAISSANCE_EMPLOYECONNAISSANCE FOREIGN KEY (CONNAISSANCEID) REFERENCES CONNAISSANCE(ID),
	CONSTRAINT FK_EMPLOYE_EMPLOYECONNAISSANCE FOREIGN KEY (EMPLOYEID) REFERENCES EMPLOYE(ID),
	CONSTRAINT C3_NIVEAU_EMPLOYECONNAISSANCE CHECK (NIVEAU IN ('NONE', 'INITIE', 'DEBUTANT', 'INTERMEDIAIRE', 'CONFIRME', 'EXPERT'))
);

create table public.EMPLOICONNAISSANCE(
	ID uuid NOT NULL,
	CONNAISSANCEID uuid NOT NULL,
	EMPLOIID uuid NOT NULL,
	DATEDEBUT TIMESTAMP DEFAULT current_timestamp,
	DATEFIN TIMESTAMP NULL,
	CONSTRAINT PK_EMPLOICONNAISSANCE PRIMARY KEY (ID),
	CONSTRAINT FK_EMPLOI_EMPLOICONNAISSANCE FOREIGN KEY (EMPLOIID) REFERENCES EMPLOI(ID),
	CONSTRAINT FK_CONNAISSANCE_EMPLOICONNAISSANCE FOREIGN KEY (CONNAISSANCEID) REFERENCES CONNAISSANCE(ID)
);

CREATE INDEX Employe_Trigramme ON EMPLOYE(CODE);
CREATE INDEX Employe_Emploi_Date ON EMPLOYEEMPLOI(DATEDEBUT, DATEFIN);
CREATE INDEX Employe_Competence_Niveau ON EMPLOYECOMPETENCE(NIVEAU);
CREATE INDEX Emploi_Service_Date ON EMPLOISERVICE(DATEDEBUT, DATEFIN);